"use strict";(self.webpackChunkmutoid_website=self.webpackChunkmutoid_website||[]).push([[351],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var p=n.createContext({}),s=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=s(r),d=a,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7844:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return m}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),i=["components"],l={sidebar_label:"Data serializer",sidebar_position:6},p="Data serializer",s={unversionedId:"modules/http/data-serializer",id:"modules/http/data-serializer",title:"Data serializer",description:"Helper for serialize data (nullable or Option) to URLSearchParams or FormData.",source:"@site/docs/02-modules/01-http/06-data-serializer.md",sourceDirName:"02-modules/01-http",slug:"/modules/http/data-serializer",permalink:"/mutoid/docs/modules/http/data-serializer",editUrl:"https://github.com/facile-it/mutoid/edit/master/website/docs/02-modules/01-http/06-data-serializer.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Data serializer",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"IO types",permalink:"/mutoid/docs/modules/http/io-types"},next:{title:"State",permalink:"/mutoid/docs/modules/state"}},u=[],c={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-serializer"},"Data serializer"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import * as DS from 'mutoid/http/dataSerializer'\n")),(0,o.kt)("p",null,"Helper for serialize data (nullable or Option) to ",(0,o.kt)("inlineCode",{parentName:"p"},"URLSearchParams")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"FormData"),"."),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"URLSearchParams")," for both browser and Node.js:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as DS from 'mutoid/http/dataSerializer'\nimport { pipe } from 'fp-ts/function'\n\nconst queryString = pipe({ page: 2, id: 5 }, DS.serializeUrl(new URLSearchParams()), DS.toQueryString)\n")),(0,o.kt)("p",null,"You can use ",(0,o.kt)("inlineCode",{parentName:"p"},"FormData")," only for browser. For Node.js you can use ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/form-data"},"form-data")," or similar libraries."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as DS from 'mutoid/http/dataSerializer'\nimport { pipe } from 'fp-ts/function'\n\nconst formData = pipe({ name: 'iacopo' }, DS.serializeForm(new FormData()))\n")))}m.isMDXComponent=!0}}]);