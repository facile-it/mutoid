(self.webpackChunkmutoid_website=self.webpackChunkmutoid_website||[]).push([[351],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return u},kt:function(){return d}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=a,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},6609:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i=["components"],s={sidebar_label:"Data serializer",sidebar_position:6},l="Data serializer",p={unversionedId:"modules/http/data-serializer",id:"modules/http/data-serializer",isDocsHomePage:!1,title:"Data serializer",description:"`ts",source:"@site/docs/02-modules/01-http/06-data-serializer.md",sourceDirName:"02-modules/01-http",slug:"/modules/http/data-serializer",permalink:"/mutoid/docs/modules/http/data-serializer",editUrl:"https://github.com/facile-it/mutoid/edit/master/website/docs/02-modules/01-http/06-data-serializer.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_label:"Data serializer",sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"IO types",permalink:"/mutoid/docs/modules/http/io-types"},next:{title:"State",permalink:"/mutoid/docs/modules/state"}},u=[],c={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-serializer"},"Data serializer"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import * as DS from 'mutoid/http/dataSerializer'\n")),(0,o.kt)("p",null,"Helper for serialize data (nullable or Option) to URLSearchParams or FormData"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as DS from 'mutoid/http/dataSerializer'\nimport { pipe } from 'fp-ts/function'\n\nconst queryString = pipe({ page: 2, id: 5 }, DS.serializeUrl(new URLSearchParams()), DS.toQueryString)\n")),(0,o.kt)("p",null,"You can use URLSearchParams on browser and NodeJs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"import * as DS from 'mutoid/http/dataSerializer'\nimport { pipe } from 'fp-ts/function'\n\nconst formData = pipe({ name: 'iacopo' }, DS.serializeForm(new FormData()))\n")),(0,o.kt)("p",null,"You can use FormData only in browser, for NodeJs you can use something like ",(0,o.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/form-data"},"form-data")))}m.isMDXComponent=!0}}]);