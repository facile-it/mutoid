(self.webpackChunkmutoid_website=self.webpackChunkmutoid_website||[]).push([[895],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var u=n.createContext({}),i=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},l=function(e){var t=i(e.components);return n.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=i(r),m=o,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||a;return r?n.createElement(f,s(s({ref:t},l),{},{components:r})):n.createElement(f,s({ref:t},l))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var i=2;i<a;i++)s[i]=r[i];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},5137:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return u},metadata:function(){return i},toc:function(){return l},default:function(){return d}});var n=r(2122),o=r(9756),a=(r(7294),r(3905)),s=["components"],c={sidebar_label:"React",sidebar_position:3},u="React hooks",i={unversionedId:"modules/react",id:"modules/react",isDocsHomePage:!1,title:"React hooks",description:"`ts",source:"@site/docs/02-modules/03-react.md",sourceDirName:"02-modules",slug:"/modules/react",permalink:"/mutoid/docs/modules/react",editUrl:"https://github.com/facile-it/mutoid/edit/master/website/docs/02-modules/03-react.md",version:"current",sidebarPosition:3,frontMatter:{sidebar_label:"React",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"State",permalink:"/mutoid/docs/modules/state"},next:{title:"Upgrade to version 0.4",permalink:"/mutoid/docs/migration/upgrade-to-0.4"}},l=[{value:"useSelector",id:"useselector",children:[]},{value:"useMutation",id:"usemutation",children:[]},{value:"useResourceFetcher",id:"useresourcefetcher",children:[]},{value:"useFetchReaderObservableResource",id:"usefetchreaderobservableresource",children:[]},{value:"useFetchObservableResource",id:"usefetchobservableresource",children:[]},{value:"useStore",id:"usestore",children:[]}],p={toc:l};function d(e){var t=e.components,r=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"react-hooks"},"React hooks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"import * as MR from 'mutoid/react'\n")),(0,a.kt)("h2",{id:"useselector"},"useSelector"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const userName = useSelector(store, s => s.userName)\n")),(0,a.kt)("h2",{id:"usemutation"},"useMutation"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"const m = useMutation(store, mutation)\n")),(0,a.kt)("h2",{id:"useresourcefetcher"},"useResourceFetcher"),(0,a.kt)("p",null,"Deprecated use ",(0,a.kt)("inlineCode",{parentName:"p"},"useFetchObservableResource")," or better ",(0,a.kt)("inlineCode",{parentName:"p"},"useFetchReaderObservableResource")),(0,a.kt)("h2",{id:"usefetchreaderobservableresource"},"useFetchReaderObservableResource"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as React from 'react'\nimport { ajax } from 'rxjs/ajax'\nimport * as RES from 'mutoid/http/Resource'\nimport * as ROR from 'mutoid/http/ReaderObservableResource'\nimport * as OR from 'mutoid/http/ObservableResource'\nimport { useFetchReaderObservableResource } from 'mutoid/react'\nimport { pipe } from 'fp-ts/function'\nimport * as t from 'io-ts'\n\nexport const userDecoders = {\n    200: t.type({\n        name: t.string,\n    }).decode,\n}\n\nexport const userFetcher = (id: number) => (deps: { ajax: typeof ajax }) =>\n    OR.fromAjax(deps.ajax(`https://api.io/user/${id}`), userDecoders)\n\nconst App: React.FC<{ id: number }> = ({ id }) => {\n    const [userResource, dispatch] = useFetchReaderObservableResource(userFetcher, { ajax })\n\n    React.useEffect(() => {\n        dispatch(id)\n    }, [dispatch, id])\n\n    return (\n        <>\n            <h1>Hello</h1>\n            <p>\n                {pipe(\n                    userResource,\n                    RES.matchD({\n                        onPending: () => 'loading...',\n                        onDone: r => r.payload.name,\n                        onFail: e => e.type,\n                    })\n                )}\n            </p>\n            <button onClick={() => dispatch(id)} type=\"button\">\n                Refetch\n            </button>\n        </>\n    )\n}\n")),(0,a.kt)("h2",{id:"usefetchobservableresource"},"useFetchObservableResource"),(0,a.kt)("p",null,"Same as ",(0,a.kt)("inlineCode",{parentName:"p"},"useFetchReaderObservableResource"),", the only difference is the input ",(0,a.kt)("inlineCode",{parentName:"p"},"ObservableResource")," instead of ",(0,a.kt)("inlineCode",{parentName:"p"},"ReaderObservableResource")),(0,a.kt)("h2",{id:"usestore"},"useStore"),(0,a.kt)("p",null,"If you have a lazy store, you can use this hook to maintain the ref over the renders"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"const appStore = () => MS.ctor({ name: 'appStore', initState: { userName: 'Marco' } })\n\nconst appStoreRef = useStore(appStore)\n")))}d.isMDXComponent=!0}}]);